{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Pub",
				"Publisher"
			],
			[
				"wh",
				"wholeData"
			],
			[
				"who",
				"wholeData"
			],
			[
				"Tk",
				"Tkinter"
			],
			[
				"zLa",
				"zLat"
			],
			[
				"dem",
				"demo_comm"
			],
			[
				"Com",
				"community"
			],
			[
				"cam",
				"cameraFollow_tf"
			],
			[
				"map",
				"map_publisher"
			],
			[
				"mesh_",
				"mesh_use_embedded_materials"
			],
			[
				"pub",
				"publish"
			],
			[
				"Easting",
				"EastingStdDev"
			],
			[
				"err",
				"error_ellipse"
			],
			[
				"stripe_",
				"stripe_id"
			],
			[
				"lane",
				"lane_outer"
			],
			[
				"str",
				"stripe_outer"
			],
			[
				"frame",
				"frame_id"
			],
			[
				"Nort",
				"NorthingStdDev_temp"
			],
			[
				"Northing",
				"NorthingStdDev_temp"
			],
			[
				"N",
				"NorthingStdDev"
			],
			[
				"Get",
				"GetDouble"
			],
			[
				"_",
				"_deg2rad"
			],
			[
				"z",
				"zCourse"
			],
			[
				"var",
				"var_name"
			],
			[
				"all",
				"all_present"
			],
			[
				"La",
				"LatLong_holder"
			],
			[
				"zLong",
				"zLongStdDev"
			],
			[
				"odo",
				"odom_publisher"
			],
			[
				"od",
				"odom_msgs"
			],
			[
				"Eas",
				"EastingStdDev"
			],
			[
				"North",
				"Northing"
			],
			[
				"EastingS",
				"EastingStdDev_temp"
			],
			[
				"Long",
				"LongStdDev_temp"
			],
			[
				"Lat",
				"LatStdDev_temp"
			],
			[
				"zLon",
				"zLongStdDev"
			],
			[
				"zLat",
				"zLatStdDev"
			],
			[
				"odom",
				"odom_msgs"
			],
			[
				"pos",
				"position"
			],
			[
				"zL",
				"zLong"
			],
			[
				"new",
				"new_LatLong"
			],
			[
				"odm",
				"odom_msgs_count"
			],
			[
				"hand",
				"handle_odom_var"
			],
			[
				"zZ",
				"zZStdDev"
			],
			[
				"ro",
				"ros_msg"
			]
		]
	},
	"buffers":
	[
		{
			"file": "scripts/guiBridge.py",
			"settings":
			{
				"buffer_size": 3329,
				"line_ending": "Unix"
			}
		},
		{
			"file": "to_do.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "scripts/randmcnally.py",
			"settings":
			{
				"buffer_size": 9509,
				"line_ending": "Unix"
			}
		},
		{
			"file": "scripts/bridge_tf.py",
			"settings":
			{
				"buffer_size": 621,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#!/usr/bin/env python\n\n\"\"\"\nThis file contains modules which are at the core of MOOS ==> ROS communication\n\nCreated 5/30/2012\nAuthor: Robert Cofield\n\"\"\"\n\ndef handle_msg(self, msg):\n    if msg.IsDouble():\n        var_type = \"Double\"\n        value = str(msg.GetDouble()) #store all values as strings until handled specifically\n    elif msg.IsString():\n        var_type = \"String\"\n        value = msg.GetString()\n    else:\n        rospy.logwarn('wtf? Unknown variable type')\n\n    time = msg.GetTime()\n    name = msg.GetKey() # type of measurement \"z______\"\n    if name in self.desired_variables: # where desired messages are scooped\n        #send to appropriate variable handler\n        if name in self.odometry_variables:\n            handle_odom_var(self, name, var_type, value, time)\n        # elif #..... other types of msgs to be done later\n    else:\n        rospy.logwarn(\"Unhandled msg: %(name)s of type %(var_type)s carries value %(value)s\" %locals())\n\n###########################################################################################\n\ndef handle_odom_var(self, name, var_type, value, time):\n    import rospy\n    from randmcnally import ll2utm  \n    from math import radians  \n\n    # Need to include covariance info from here throughout\n    time = int(time*1000.0)/1000.0 #rounding to 3 decimal places so that the msg will groove...\n\n    # this function should only receive msgs with name 'zLat' & 'zLong' & 'zCourse'\n    # So missing info should be there\n    if name not in self.LatLong_holder: \n        self.LatLong_holder[name] = dict([['var_type', var_type],\n                                          ['value', float(value)],\n                                          ['time', time]])#need to make sure time stamp is the same        \n    # Problems might arise here if time steps and info flow doesn't match up\n    all_present = True # Now determine if there's any msgs missing\n    for var_name in self.odometry_variables:\n        if var_name not in self.LatLong_holder:\n            all_present = False\n    if all_present: # time step has all required infos\n        time_lat = self.LatLong_holder['zLat']['time']\n        time_lon = self.LatLong_holder['zLong']['time']\n        time_crs = self.LatLong_holder['zCourse']['time']\n        if (time_lat != time_lon) or (time_lat != time_crs):\n            rospy.logwarn(\"Lat/Long/Course mismatch:: time steps aren't being handled properly\")\n        \n        # Position Conversions\n        (Easting, Northing) = ll2utm(self.LatLong_holder['zLat']['value'], \n                                             self.LatLong_holder['zLong']['value'])\n        \n        # Covariances - Lat/Lon Std Dev are output in meters already\n        NorthingStdDev = self.LatLong_holder['zLatStdDev']['value']\n        EastingStdDev = self.LatLong_holder['zLongStdDev']['value']\n                    \n        print('EastingStdDev: %(EastingStdDev)f' %locals())\n        print('NorthingStdDev %(NorthingStdDev)f' %locals())\n\n        # Consolidate into packaging dictionary & send off\n        self.NE_holder = {}\n        self.NE_holder['N'] = Northing\n        self.NE_holder['E'] = Easting\n        self.NE_holder['Nsd'] = NorthingStdDev\n        self.NE_holder['Esd'] = EastingStdDev\n        self.NE_holder['crs'] = radians(self.LatLong_holder['zCourse']['value']) # Will orient odom arrows to velocity direction\n        self.NE_holder['time'] = self.LatLong_holder['zLong']['time']\n        package_odom_var(self, self.NE_holder) # Send to shipping function\n        self.LatLong_holder = {} # clear holder for location at next time step\n        del self.NE_holder\n\n#########################################################################################\n\ndef package_odom_var(self, NE_holder):\n    \"\"\"\n    Puts odom var (from UTM N & E) into a ros message.\n    \"\"\"\n    import roslib; roslib.load_manifest('fhwa2_MOOS_to_ROS')\n    import rospy\n    from nav_msgs.msg import Odometry # this will need to be repeated for other message types?\n    from visualization_msgs.msg import Marker, MarkerArray # had to add module to manifest\n    import tf\n    from tf.transformations import quaternion_from_euler as qfe\n    from math import sqrt, pi, degrees\n    import bridge_tf\n\n    time = NE_holder['time']\n    # Assume that the odom msg for this time step doesn't yet exist, create it\n    self.odom_msgs[time] = Odometry()\n    self.odom_msgs[time].header.stamp = rospy.Time(time)\n    self.odom_msgs[time].header.frame_id = \"odom\"\n    # when NE_holder reaches this function, it should have all the necessary info\n    self.odom_msgs[time].pose.pose.position.x = NE_holder['E']\n    self.odom_msgs[time].pose.pose.position.y = NE_holder['N']\n    self.odom_msgs[time].pose.pose.position.z = 0 # constrain to xy axis for top-down view (this may not need to be stated)\n    quat = qfe(-pi, -pi, -NE_holder['crs']-pi/2)\n    self.odom_msgs[time].pose.pose.orientation.x = quat[0]\n    self.odom_msgs[time].pose.pose.orientation.y = quat[1]\n    self.odom_msgs[time].pose.pose.orientation.z = quat[2]\n    self.odom_msgs[time].pose.pose.orientation.w = quat[3]\n    self.odom_msgs[time].pose.covariance[0] = NE_holder['Nsd']\n    self.odom_msgs[time].pose.covariance[7] = NE_holder['Esd']\n    self.odom_msgs[time].pose.covariance[14] = 0 # constrain to xy axis for top-down view (this may not need to be stated)\n    # Send to positions display function\n    self.odom_publisher.publish(self.odom_msgs[time]) # ship it! # this action moved to do_current position\n    # send to error ellipse & vehicle model function\n    pub_at_position(self, time)\n    # tell camera tf where the look\n    bridge_tf.cameraFollow_tf(self, time)\n    del self.odom_msgs[time]\n\n\ndef pub_at_position(self, time):\n    from visualization_msgs.msg import Marker\n    import rospy\n    from math import\n    \"\"\" \n    Handles necessary information for displaying error ellipses and vehicle model at current position\n    \"\"\"\n    marker = Marker()\n    pub = self.curpos_publisher\n    msg = self.odom_msgs[time]\n    marker.header = msg.header\n    marker.id = 0 # enumerate subsequent markers here\n    marker.action = Marker.MODIFY # can be ADD, REMOVE, or MODIFY\n    marker.pose = msg.pose.pose\n    marker.lifetime = rospy.Duration() # will last forever unless modified\n\n    # Error Ellipse\n    marker.ns = \"Error_Ellipses\"\n    marker.type = Marker.CYLINDER     \n    marker.scale.x = sqrt(msg.pose.covariance[0]) *10\n    marker.scale.y = sqrt(msg.pose.covariance[7]) *10\n    marker.scale.z = 0.000001\n    marker.color.r = 0.0\n    marker.color.g = 0.0\n    marker.color.b = 1.0\n    marker.color.a = 1.0 # transparency            \n    pub.publish(marker)\n    \n    # Vehicle Model\n    marker.ns = \"vehicle_model\"\n    marker.type = Marker.MESH_RESOURCE\n    marker.scale.x = 0.0254 # artifact of sketchup export\n    marker.scale.y = 0.0254 # artifact of sketchup export\n    marker.scale.z = 0.0254 # artifact of sketchup export\n    marker.color.r = .5\n    marker.color.g = .5\n    marker.color.b = .5\n    marker.color.a = .5\n    marker.mesh_resource = \"package://fhwa2_MOOS_to_ROS/mesh/infiniti_03_novatel_centered.dae\" #robustify here\n    marker.mesh_use_embedded_materials = False\n    pub.publish(marker)",
			"file": "scripts/mailroom.py",
			"file_size": 7173,
			"file_write_time": 1339612481000000,
			"settings":
			{
				"buffer_size": 7171,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/gavlab/alog_manip/pull_gNovatel.py",
		"/media/8009-F73F/Untitled Document",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/bridge.py",
		"/home/gavlab/LFviz/Tkinter/output_log.txt",
		"/home/gavlab/LFviz/Qt/LFviz/ui_LFviz.py",
		"/home/gavlab/LFviz/Qt/LFviz/LFviz.py",
		"/home/gavlab/LFviz/Qt/LFviz/ui_LFviz_Form.py",
		"/home/gavlab/LFviz/Qt/LFviz/LFviz_Form.py",
		"/home/gavlab/Desktop/ITM_1_1_2010_____02_38_48.ylog",
		"/home/gavlab/Desktop/ITM_1_1_2010_____02_38_48.slog",
		"/home/gavlab/LFviz/Qt/data/simALOG.alog",
		"/home/gavlab/LFviz/Tkinter/gui.py",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/randmcnally.py",
		"/home/gavlab/Documents/simpleapp/untitled1.py",
		"/home/gavlab/Documents/simpleapp/idkyet.py",
		"/home/gavlab/Desktop/how william regenerated the file.txt",
		"/home/gavlab/Documents/calculatorform/calculatorform/ui_calculatorform.py",
		"/usr/lib/pyshared/python2.7/PySide/QtGui.so",
		"/home/gavlab/Documents/calculatorform/calculatorform/calculatorform.py",
		"/home/gavlab/LFviz/LFviz/LFviz.py",
		"/home/gavlab/Documents/calculatorform/README.txt",
		"/home/gavlab/Documents/qt_designer_calculatorform/calculatorform/examples_designer_calculatorform_ui_calculatorform.py",
		"/home/gavlab/Documents/qt_designer_calculatorform/calculatorform/examples_designer_calculatorform_calculatorform.py",
		"/home/gavlab/Documents/qt_designer_calculatorform/calculatorform/examples_designer_calculatorform_calculatorform.ui",
		"/home/gavlab/Downloads/ashgti-elect6350-8303bf6/hw2/homework2_gui.py",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/guiBridge.py",
		"/home/gavlab/Documents/simpleapp/simpleapp.py",
		"/home/gavlab/Documents/simpleapp/f2m.py",
		"/home/gavlab/LFviz/gui.py",
		"/etc/apt/sources.list",
		"/home/gavlab/Documents/simpleapp/corey.py",
		"/home/gavlab/Documents/simpleapp/py_demo_tk3.py",
		"/home/gavlab/Documents/simpleapp/py_demo_tk2.py",
		"/home/gavlab/Documents/simpleapp/py_demo_tk1.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/MOOSCommClient.py",
		"/home/gavlab/Desktop/Example Mission Files/Detroit_1_1_2010_____00_16_18._moos",
		"/home/gavlab/Desktop/Example Mission Files/tcpipMOOSBridgeqandd.txt",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/to_do.txt",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/launch/run_everything.launch",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/MOOS/bin/mission_please_work.moos",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/bridge_tf.py",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/mailroom.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/CMakeLists.txt",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/gui_pMOOSBridge.cpp",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/MOOS/build/MOOS_svn/MOOSBin/scripts/RunMOOS",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/README.md",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/veh_pMOOSBridge.cpp",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/MOOS/build/MOOS_svn/Essentials/pMOOSBridge/MOOSBridge.cpp",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/__init__.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/CMOOSCommObject.so",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/CMOOSCommPkt.so",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/CMOOSMsg.so",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/XPCTcpSocket.so",
		"/home/gavlab/Downloads/AdbeRdr9.5.1-1_i486linux_enu.bin",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/survey.py",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/LL2UTM.py",
		"/opt/ros/fuerte/lib/python2.7/dist-packages/visualization_msgs/msg/_MarkerArray.py",
		"/home/gavlab/Desktop/tf_stuff_from_william/transforms.xml",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/survey_convert.py",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/survey/stripe_inner_lat.txt",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/bridge.pyc",
		"/home/gavlab/Documents/FHWA2/ITM_1_1_2010_____02_38_48.alog",
		"/home/gavlab/Desktop/tf_stuff_from_william/odom2tf.py",
		"/home/gavlab/Desktop/tf_stuff_from_william/tf.launch",
		"/home/gavlab/.cache/.fr-Fzme8I/Collada_Blender_0_3_159/bpymodules/colladaImEx/collada.py",
		"/home/gavlab/.cache/.fr-CaQk4N/Collada_Blender_0_3_159/colladaExport14.py",
		"/home/gavlab/Desktop/Untitled Document",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/misc_scripts/scripts/odom2tf.py",
		"/home/gavlab/tf.launch",
		"/home/gavlab/Documents/FHWA2/novatel_to_odom.py",
		"/home/gavlab/Documents/FHWA2/error_ellipses.py",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/novatel_to_odom.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/build/pyMOOS_svn/src/pyMOOSMsg.cpp",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS2ROS/scripts/moos2ros.py",
		"/home/gavlab/Desktop/ITM_1_1_2010_____02_38_48.alog",
		"/home/gavlab/Documents/FHWA2/LatLongUTMconversion.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/CMakeLists.txt",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/Makefile",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS2ROS/src/moos2ros.cc",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/Makefile",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/misc_scripts/launch/tf.launch",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/build/pyMOOS_svn/CMakeLists.txt",
		"/home/gavlab/rgc0003rosws/.rosinstall",
		"/home/gavlab/Documents/FHWA2/ply Attempt/archived/ring1_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/obj Attempt/ring1_xyzPlane.obj",
		"/home/gavlab/Documents/FHWA2/ply Attempt/PointPlanes/all_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/PointPlanes/ring5_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/PointPlanes/ring4_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/PointPlanes/ring3_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/PointPlanes/ring2_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/PointPlanes/ring1_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/test_tri.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/test_cube.ply",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/msg_gen/cpp/include/MOOS_msgs/MOOSDouble.h",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/src/MOOS_msgs/msg/_MOOSDouble.py",
		"/home/gavlab/Documents/FHWA2/obj_io_modif232b.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/msg_gen/lisp/MOOSDouble.lisp",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/src/MOOS_msgs/__init__.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/src/MOOS_msgs/msg/__init__.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/msg/MOOSDouble.msg",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS2ROS/include/MOOS2ROS/moos2ros.h",
		"/home/gavlab/Documents/FHWA2/ring5_xyzPlane.obj",
		"/home/gavlab/Documents/FHWA2/ring4_xyzPlane.obj",
		"/home/gavlab/Documents/FHWA2/ring3_xyzPlane.obj",
		"/home/gavlab/Documents/FHWA2/ring2_xyzPlane.obj",
		"/home/gavlab/Documents/FHWA2/ring1_xyzPlane.obj",
		"/home/gavlab/Desktop/track_survey_sorted_lla.mat"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"LatLong_holder",
			"odom_msgs",
			"survey",
			"setmargin",
			"course",
			"@",
			"S",
			"uMS",
			"protocol",
			"ALOG2RVIZ",
			"pub_at_position",
			"survey",
			"pub_at_position",
			"create_NCAT_map",
			"survey",
			"LL2UTM.convert",
			"convert",
			"cameraFollow_tf",
			"print",
			"print\n\n\nprint",
			"print",
			"zLongStdDev",
			"StdDev",
			"gNovatel",
			"print",
			"course",
			"base_footprint",
			"onConnect",
			"Odometry",
			"rospy",
			"odom2tf",
			"NE_holder['time']",
			"zLongStdDev",
			"gNovatel",
			"zLat",
			"zlat",
			"Novatel2Odom",
			"zc",
			"odometry_variables",
			"zHorizSpeed",
			"False",
			"print_statement",
			"novatel2odom",
			"\"MOOS\"",
			"MOOS",
			"MOOS_MSGS_MESSAGE_MOOSDOUBLE_H",
			"ros_msg",
			"IsDouble"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"ll2utm",
			"time",
			"desired_variables"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "scripts/guiBridge.py",
					"settings":
					{
						"buffer_size": 3329,
						"regions":
						{
						},
						"selection":
						[
							[
								1855,
								1869
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 45.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "to_do.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "scripts/randmcnally.py",
					"settings":
					{
						"buffer_size": 9509,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "scripts/bridge_tf.py",
					"settings":
					{
						"buffer_size": 621,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "scripts/mailroom.py",
					"settings":
					{
						"buffer_size": 7171,
						"regions":
						{
						},
						"selection":
						[
							[
								1523,
								1537
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 60.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.529287461463,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 164.0,
	"status_bar_visible": true
}
