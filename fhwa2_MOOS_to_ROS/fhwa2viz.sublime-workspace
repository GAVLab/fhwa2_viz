{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"NCAT_",
				"NCAT_UTM_Plane_03_stripe_planes_colored_01"
			],
			[
				"me",
				"mesh"
			],
			[
				"gia",
				"giant_cube_at_NE_end"
			],
			[
				"UTM",
				"UTMdatum"
			],
			[
				"mesh",
				"mesh_resource"
			],
			[
				"no",
				"novatel"
			],
			[
				"Mar",
				"Marker"
			],
			[
				"Penn",
				"PennSt"
			],
			[
				"cup",
				"curpos_array"
			],
			[
				"M",
				"MarkerArray"
			],
			[
				"Marker",
				"MarkerArray"
			],
			[
				"rg",
				"rgb_dsrc"
			],
			[
				"rgb_",
				"rgb_sri"
			],
			[
				"rgb",
				"rgb_novatel"
			],
			[
				"upd",
				"upd_veh"
			],
			[
				"ell",
				"ell_marker"
			],
			[
				"de",
				"demarcateSource"
			],
			[
				"sta",
				"stackup_elev"
			],
			[
				"pack",
				"package_odom_var"
			],
			[
				"odom",
				"odom_msg"
			],
			[
				"UT",
				"UTMtoPub"
			],
			[
				"U",
				"UTMtoPub"
			],
			[
				"ts",
				"tstamp"
			],
			[
				"sens",
				"sens_str"
			],
			[
				"conver",
				"convert_odom_var"
			],
			[
				"des",
				"des_var_ind"
			],
			[
				"holder",
				"holder_publishable"
			],
			[
				"desi",
				"desired_variables"
			],
			[
				"Lat",
				"LatLong_holder"
			],
			[
				"conv",
				"convert_odom_var"
			],
			[
				"handl",
				"handle_odom_var"
			],
			[
				"handle",
				"handle_msg"
			],
			[
				"package",
				"package_odom_var"
			],
			[
				"Odom",
				"Odometry"
			],
			[
				"Pub",
				"Publisher"
			],
			[
				"wh",
				"wholeData"
			],
			[
				"who",
				"wholeData"
			],
			[
				"Tk",
				"Tkinter"
			],
			[
				"zLa",
				"zLat"
			],
			[
				"dem",
				"demo_comm"
			],
			[
				"Com",
				"community"
			],
			[
				"cam",
				"cameraFollow_tf"
			],
			[
				"map",
				"map_publisher"
			],
			[
				"mesh_",
				"mesh_use_embedded_materials"
			],
			[
				"pub",
				"publish"
			],
			[
				"Easting",
				"EastingStdDev"
			],
			[
				"err",
				"error_ellipse"
			],
			[
				"stripe_",
				"stripe_id"
			],
			[
				"lane",
				"lane_outer"
			],
			[
				"str",
				"stripe_outer"
			],
			[
				"frame",
				"frame_id"
			],
			[
				"Nort",
				"NorthingStdDev_temp"
			],
			[
				"Northing",
				"NorthingStdDev_temp"
			],
			[
				"N",
				"NorthingStdDev"
			],
			[
				"Get",
				"GetDouble"
			],
			[
				"_",
				"_deg2rad"
			],
			[
				"z",
				"zCourse"
			],
			[
				"var",
				"var_name"
			],
			[
				"all",
				"all_present"
			],
			[
				"La",
				"LatLong_holder"
			],
			[
				"zLong",
				"zLongStdDev"
			],
			[
				"odo",
				"odom_publisher"
			],
			[
				"od",
				"odom_msgs"
			],
			[
				"Eas",
				"EastingStdDev"
			],
			[
				"North",
				"Northing"
			],
			[
				"EastingS",
				"EastingStdDev_temp"
			],
			[
				"Long",
				"LongStdDev_temp"
			],
			[
				"zLon",
				"zLongStdDev"
			],
			[
				"zLat",
				"zLatStdDev"
			],
			[
				"pos",
				"position"
			],
			[
				"zL",
				"zLong"
			],
			[
				"new",
				"new_LatLong"
			],
			[
				"odm",
				"odom_msgs_count"
			],
			[
				"hand",
				"handle_odom_var"
			],
			[
				"zZ",
				"zZStdDev"
			],
			[
				"ro",
				"ros_msg"
			]
		]
	},
	"buffers":
	[
		{
			"file": "scripts/guiBridge.py",
			"settings":
			{
				"buffer_size": 6051,
				"line_ending": "Unix"
			}
		},
		{
			"file": "scripts/mailroom.py",
			"settings":
			{
				"buffer_size": 14844,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#!/usr/bin/env python\n\"\"\"\nThis file contain modules related to coordinate systems, and specifically the NCAT track map.\n\nCreated 5/20/2012\nAuthor: Robert Cofield\n\nI know that my coding sucks here. Thank you.\n\"\"\"\n\ndef survey():\n    \"\"\"\n    This function must be in the same directory as the *.txt survey files.\n    \"\"\"\n\n    from csv import reader as rdr\n    import os\n\n    curr = os.getcwd()\n    # The ray Lat/Lon survey data is in a subfolder to this file's path, named 'survey'    \n    surveydir = os.path.dirname(__file__) + '/survey'\n    print(curr)\n    print(surveydir)\n\n    ### Reader Imports ###\n    os.chdir(surveydir)\n    stripe_inner_lat_rd = rdr(open(\"stripe_inner_lat.txt\"), delimiter=\" \")\n    stripe_inner_lon_rd = rdr(open(\"stripe_inner_lon.txt\"), delimiter=\" \")\n    lane_inner_lat_rd = rdr(open(\"lane_inner_lat.txt\"), delimiter=\" \")\n    lane_inner_lon_rd = rdr(open(\"lane_inner_lon.txt\"), delimiter=\" \")\n    stripe_middle_lat_rd = rdr(open(\"stripe_middle_lat.txt\"), delimiter=\" \")\n    stripe_middle_lon_rd = rdr(open(\"stripe_middle_lon.txt\"), delimiter=\" \")\n    lane_outer_lat_rd = rdr(open(\"lane_outer_lat.txt\"), delimiter=\" \")\n    lane_outer_lon_rd = rdr(open(\"lane_outer_lon.txt\"), delimiter=\" \")\n    stripe_outer_lat_rd = rdr(open(\"stripe_outer_lat.txt\"), delimiter=\" \")\n    stripe_outer_lon_rd = rdr(open(\"stripe_outer_lon.txt\"), delimiter=\" \")\n\n    ### Inner Stripe ###\n    stripe_inner_lat = []\n    for col in stripe_inner_lat_rd:\n        stripe_inner_lat.append(col)\n    del stripe_inner_lat[0][0]\n    stripe_inner_lat = stripe_inner_lat[0]\n    stripe_inner_lon = []\n    for col in stripe_inner_lon_rd:\n        stripe_inner_lon.append(col)\n    del stripe_inner_lon[0][0]\n    stripe_inner_lon = stripe_inner_lon[0]\n    stripe_inner = {}\n    for pt in range(len(stripe_inner_lon)):\n        stripe_inner[pt] = [stripe_inner_lat[pt], stripe_inner_lon[pt]]\n\n    ### Center - Inner Lane ###\n    lane_inner_lat = []\n    for col in lane_inner_lat_rd:\n        lane_inner_lat.append(col)\n    del lane_inner_lat[0][0]\n    lane_inner_lat = lane_inner_lat[0]\n    lane_inner_lon = []\n    for col in lane_inner_lon_rd:\n        lane_inner_lon.append(col)\n    del lane_inner_lon[0][0]\n    lane_inner_lon = lane_inner_lon[0]\n    lane_inner = {}\n    for pt in range(len(lane_inner_lon)):\n        lane_inner[pt] = [lane_inner_lat[pt], lane_inner_lon[pt]]\n\n    ### Center Stripe ###\n    stripe_middle_lat = []\n    for col in stripe_middle_lat_rd:\n        stripe_middle_lat.append(col)\n    del stripe_middle_lat[0][0]\n    stripe_middle_lat = stripe_middle_lat[0]\n    stripe_middle_lon = []\n    for col in stripe_middle_lon_rd:\n        stripe_middle_lon.append(col)\n    del stripe_middle_lon[0][0]\n    stripe_middle_lon = stripe_middle_lon[0]\n    stripe_middle = {}\n    for pt in range(len(stripe_middle_lon)):\n        stripe_middle[pt] = [stripe_middle_lat[pt], stripe_middle_lon[pt]]\n\n    ### Center - Outer Lane ###\n    lane_outer_lat = []\n    for col in lane_outer_lat_rd:\n        lane_outer_lat.append(col)\n    del lane_outer_lat[0][0]\n    lane_outer_lat = lane_outer_lat[0]\n    lane_outer_lon = []\n    for col in lane_outer_lon_rd:\n        lane_outer_lon.append(col)\n    del lane_outer_lon[0][0]\n    lane_outer_lon = lane_outer_lon[0]\n    lane_outer = {}\n    for pt in range(len(lane_outer_lon)):\n        lane_outer[pt] = [lane_outer_lat[pt], lane_outer_lon[pt]]\n\n    ### Outer Stripe ###\n    stripe_outer_lat = []\n    for col in stripe_outer_lat_rd:\n        stripe_outer_lat.append(col)\n    del stripe_outer_lat[0][0]\n    stripe_outer_lat = stripe_outer_lat[0]\n    stripe_outer_lon = []\n    for col in stripe_outer_lon_rd:\n        stripe_outer_lon.append(col)\n    del stripe_outer_lon[0][0]\n    stripe_outer_lon = stripe_outer_lon[0]\n    stripe_outer = {}\n    for pt in range(len(stripe_outer_lon)):\n        stripe_outer[pt] = [stripe_outer_lat[pt], stripe_outer_lon[pt]]\n\n    os.chdir(curr)\n    return (stripe_inner, lane_inner, stripe_middle, lane_outer, stripe_outer)\n\n\ndef ll2utm(Lat, Long):\n	\"\"\"\n	Converts decimal degree latitude & longitude to UTM Northing & Easting\n\n	Adaptation of code from http://mahi.ucsd.edu/class233/data/Basic/LatLongUTMconversion.py\n	Author: Robert Cofield\n 	20 May, 2012\n	Only works for UTM Zone 16 (any letter designation), Northern Hemisphere\n 	must stay in same letter designation.\n	\"\"\"\n\n	from math import pi, sin, cos, tan, sqrt\n\n	_deg2rad = pi / 180.0\n	_rad2deg = 180.0 / pi\n\n	# WGS-84 Ellipsoid yields these criteria:\n	a = 6378137\n	eccSquared = 0.00669438\n	k0 = 0.9996\n\n	ZoneNumber = 16\n\n	# Longitude must be between -180 & 179.9 (input in decimal degrees)\n	LongTemp = (Long+180)-int((Long+180)/360)*360-180 # -180.00 .. 179.9\n	LongRad = LongTemp * _deg2rad\n\n	LongOrigin = (ZoneNumber - 1)*6-180+3 # +3 puts origin in middle of zone\n	LongOriginRad = LongOrigin*_deg2rad\n\n	LatRad = Lat * _deg2rad\n\n	eccPrimeSquared = eccSquared/(1 - eccSquared)\n	N = a/sqrt(1-eccSquared*sin(LatRad)*sin(LatRad))\n	T = (tan(LatRad))**2\n	C = eccPrimeSquared*cos(LatRad)*cos(LatRad)\n	A = cos(LatRad)*(LongRad-LongOriginRad)\n	M = a*((1\n            - eccSquared/4\n            - 3*eccSquared*eccSquared/64\n            - 5*eccSquared*eccSquared*eccSquared/256)*LatRad \n           - (3*eccSquared/8\n              + 3*eccSquared*eccSquared/32\n              + 45*eccSquared*eccSquared*eccSquared/1024)*sin(2*LatRad)\n           + (15*eccSquared*eccSquared/256 + 45*eccSquared*eccSquared*eccSquared/1024)*sin(4*LatRad) \n           - (35*eccSquared*eccSquared*eccSquared/3072)*sin(6*LatRad))\n	Easting = (k0*N*(A+(1-T+C)*A*A*A/6\n                        + (5-18*T+T*T+72*C-58*eccPrimeSquared)*A*A*A*A*A/120)\n                  + 500000.0)\n	Northing = (k0*(M+N*tan(LatRad)*(A*A/2+(5-T+9*C+4*C*C)*A*A*A*A/24\n                                        + (61\n                                           -58*T\n                                           +T*T\n                                           +600*C\n                                           -330*eccPrimeSquared)*A*A*A*A*A*A/720)))\n	return (Easting, Northing)\n\n	# not quite sure what else to do here\n\n\ndef create_map(self):\n    \"\"\"\n    This function collects the survey data and puts it into marker arrays ready to be published in rviz\n    \"\"\"\n    from visualization_msgs.msg import Marker, MarkerArray # had to add module to manifest\n    import rospy\n\n    (stripe_inner, lane_inner, stripe_middle, lane_outer, stripe_outer) = survey()\n    stripes = [stripe_inner, stripe_middle, stripe_outer]\n    lanes = [lane_inner, lane_outer]\n    self.map_stripe_array = MarkerArray()\n    self.map_lane_array = MarkerArray()\n    NCAT_id = 0\n    \n    for ring in stripes:\n        for pt in ring:\n            lat = float(ring[pt][0])\n            lon = float(ring[pt][1])\n            (east, nrth) = ll2utm(lat, lon) # convert to UTM\n            marker = Marker()\n            marker.header.frame_id = 'odom'\n            marker.id = NCAT_id # enumerate subsequent markers here\n            marker.action = Marker.ADD # can be ADD, REMOVE, or MODIFY\n            marker.lifetime = rospy.Duration() # will last forever unless modified\n            marker.ns = \"stripes\"\n            marker.type = Marker.CUBE\n            marker.pose.position.x = east - self.UTMdatum['E']\n            marker.pose.position.y = nrth - self.UTMdatum['N']\n            marker.pose.position.z = -1.55 # zero is a novatel mount level\n            marker.color.r = 255\n            marker.color.g = 255\n            marker.color.b = 0\n            marker.color.a = 1.0\n            marker.scale.x = 0.2\n            marker.scale.y = 0.2\n            marker.scale.z = 0.7\n            marker.mesh_use_embedded_materials = False\n            self.map_stripe_array.markers.append(marker)\n            \n            # print('Stripes')\n            # print(marker)\n            NCAT_id += 1\n    print('Stripe Markers have been printed') \n    del marker\n\n    for ring in lanes:\n        for pt in ring:\n            lat = float(ring[pt][0])\n            lon = float(ring[pt][1])\n            (east, nrth) = ll2utm(lat, lon) # convert to UTM\n            \n            marker = Marker()\n            marker.header.frame_id = 'odom'\n            marker.id = NCAT_id # enumerate subsequent markers here\n            marker.action = Marker.ADD # can be ADD, REMOVE, or MODIFY\n            marker.lifetime = rospy.Duration() # will last forever unless modified\n            marker.ns = \"lane_centers\"\n            marker.type = Marker.SPHERE\n            marker.pose.position.x = east - self.UTMdatum['E']\n            marker.pose.position.y = nrth - self.UTMdatum['N']\n            marker.pose.position.z = -1.55 # zero is a novatel mount level\n            marker.color.r = 0\n            marker.color.g = 0\n            marker.color.b = 0\n            marker.color.a = 0.75\n            marker.scale.x = 0.2\n            marker.scale.y = 0.2\n            marker.scale.z = 0.2\n            marker.mesh_use_embedded_materials = False\n            \n            self.map_lane_array.markers.append(marker)\n            \n            # print('Lane Centers')\n            # print(marker)\n            NCAT_id += 1\n    print('Lane Center Markers have been printed')\n\n\n##################################################################################\n\ndef create_map_mesh(self):\n    from visualization_msgs.msg import Marker\n    import rospy\n\n    marker = Marker()\n    # pub = self.track_mesh_publisher\n    # leave the position at default (0,0,0) b/c it is created in blender at the UTM coords\n    marker.header.frame_id = 'odom' # publish in static frame\n    # marker.header.stamp = rospy.Time.now\n    marker.id = 0\n    marker.action = Marker.ADD\n    marker.lifetime = rospy.Duration() # immortal unless changed\n    marker.ns = \"track_mesh\"\n    marker.type = Marker.MESH_RESOURCE\n    marker.mesh_use_embedded_materials = False\n    marker.mesh_resource = \"package://fhwa2_MOOS_to_ROS/mesh/NCAT_UTM_Plane_01_minimal.stl\" # wahoo\n    marker.pose.position.x = 0# - self.UTMdatum['E']\n    marker.pose.position.y = 0# - self.UTMdatum['N']\n    marker.pose.position.z = -1.57\n    marker.scale.x = 1\n    marker.scale.y = 1\n    marker.scale.z = 1\n    marker.color.r = 0.3\n    marker.color.g = 0.3\n    marker.color.b = 0.3\n    marker.color.a = 1.0\n    self.track_mesh_publisher.publish(marker)\n\n\n    ### try to publish a giant ass cube mesh at the NE corner for debugging\n    # marker.mesh_resource = \"package://fhwa2_MOOS_to_ROS/mesh/giant_cube_at_NE_end.dae\"\n    # self.track_mesh_publisher.publish(marker)\n\n",
			"file": "scripts/randmcnally.py",
			"file_size": 10830,
			"file_write_time": 1340910274000000,
			"settings":
			{
				"buffer_size": 10455,
				"line_ending": "Unix"
			}
		},
		{
			"file": "scripts/bridge_tf.py",
			"settings":
			{
				"buffer_size": 650,
				"line_ending": "Unix"
			}
		},
		{
			"file": "to_do.txt",
			"settings":
			{
				"buffer_size": 494,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/gavlab/rgc0003rosws/fhwa2_viz/README.md",
			"settings":
			{
				"buffer_size": 1314,
				"line_ending": "Unix"
			}
		},
		{
			"file": "scripts/make_mult_inputs.py",
			"settings":
			{
				"buffer_size": 2342,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/build/pyMOOS_svn/src/pyMOOSMsg.cpp",
			"settings":
			{
				"buffer_size": 2577,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/MOOSCommClient.py",
			"settings":
			{
				"buffer_size": 14223,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/gavlab/alog_Files/Long_novatel_plus3.alog",
			"settings":
			{
				"buffer_size": 771023,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/gavlab/alog_Files/Long_onlyNovatel.alog",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/guiBridge.py",
		"/home/ozymandium/fhwa2_ws/fhwa2_viz/README.md",
		"/home/gavlab/alog_Files/Long_novatel_plus3.alog",
		"/home/ozymandium/fhwa2_ws/MOOS-ros-pkg/MOOS/pymoos/src/pyMOOSMsg.cpp",
		"/home/ozymandium/fhwa2_ws/MOOS-ros-pkg/MOOS/pymoos/python/__init__.py",
		"/opt/ros/fuerte/stacks/visualization_tutorials/interactive_marker_tutorials/python/menu.py",
		"/opt/ros/fuerte/etc/ros/roscore.xml",
		"/opt/ros/fuerte/lib/python2.7/dist-packages/ros/__init__.py",
		"/home/ozymandium/ros/.rosinstall",
		"/home/ozymandium/alog_Files/Long_novatel_plus3.alog",
		"/home/ozymandium/fhwa2_ws/fhwa2_viz/fhwa2_viz.rosinstall",
		"/home/ozymandium/fhwa2_ws/MOOS-ros-pkg/MOOS/pymoos/bin/MOOSCommClient.py",
		"/home/ozymandium/.mission-control/accounts/accounts.cfg",
		"/usr/lib/python3.2/config/Makefile",
		"/home/ozymandium/fhwa2_ws/MOOS-ros-pkg/MOOS/CMakeLists.txt",
		"/home/ozymandium/fhwa2_ws/MOOS-ros-pkg/MOOS/Makefile",
		"/home/ozymandium/fhwa2_ws/MOOS-ros-pkg/MOOS/pyMOOS/pymoos_r16_py3k_option.patch",
		"/home/ozymandium/fhwa2_ws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/CMakeLists.txt",
		"/home/ozymandium/fhwa2_ws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/msg/MOOSDouble.msg",
		"/home/gavlab/alog_manip/pull_gNovatel.py",
		"/media/8009-F73F/Untitled Document",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/bridge.py",
		"/home/gavlab/LFviz/Tkinter/output_log.txt",
		"/home/gavlab/LFviz/Qt/LFviz/ui_LFviz.py",
		"/home/gavlab/LFviz/Qt/LFviz/LFviz.py",
		"/home/gavlab/LFviz/Qt/LFviz/ui_LFviz_Form.py",
		"/home/gavlab/LFviz/Qt/LFviz/LFviz_Form.py",
		"/home/gavlab/Desktop/ITM_1_1_2010_____02_38_48.ylog",
		"/home/gavlab/Desktop/ITM_1_1_2010_____02_38_48.slog",
		"/home/gavlab/LFviz/Qt/data/simALOG.alog",
		"/home/gavlab/LFviz/Tkinter/gui.py",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/randmcnally.py",
		"/home/gavlab/Documents/simpleapp/untitled1.py",
		"/home/gavlab/Documents/simpleapp/idkyet.py",
		"/home/gavlab/Desktop/how william regenerated the file.txt",
		"/home/gavlab/Documents/calculatorform/calculatorform/ui_calculatorform.py",
		"/usr/lib/pyshared/python2.7/PySide/QtGui.so",
		"/home/gavlab/Documents/calculatorform/calculatorform/calculatorform.py",
		"/home/gavlab/LFviz/LFviz/LFviz.py",
		"/home/gavlab/Documents/calculatorform/README.txt",
		"/home/gavlab/Documents/qt_designer_calculatorform/calculatorform/examples_designer_calculatorform_ui_calculatorform.py",
		"/home/gavlab/Documents/qt_designer_calculatorform/calculatorform/examples_designer_calculatorform_calculatorform.py",
		"/home/gavlab/Documents/qt_designer_calculatorform/calculatorform/examples_designer_calculatorform_calculatorform.ui",
		"/home/gavlab/Downloads/ashgti-elect6350-8303bf6/hw2/homework2_gui.py",
		"/home/gavlab/Documents/simpleapp/simpleapp.py",
		"/home/gavlab/Documents/simpleapp/f2m.py",
		"/home/gavlab/LFviz/gui.py",
		"/etc/apt/sources.list",
		"/home/gavlab/Documents/simpleapp/corey.py",
		"/home/gavlab/Documents/simpleapp/py_demo_tk3.py",
		"/home/gavlab/Documents/simpleapp/py_demo_tk2.py",
		"/home/gavlab/Documents/simpleapp/py_demo_tk1.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/MOOSCommClient.py",
		"/home/gavlab/Desktop/Example Mission Files/Detroit_1_1_2010_____00_16_18._moos",
		"/home/gavlab/Desktop/Example Mission Files/tcpipMOOSBridgeqandd.txt",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/to_do.txt",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/launch/run_everything.launch",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/MOOS/bin/mission_please_work.moos",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/bridge_tf.py",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/mailroom.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/CMakeLists.txt",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/gui_pMOOSBridge.cpp",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/MOOS/build/MOOS_svn/MOOSBin/scripts/RunMOOS",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/README.md",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/veh_pMOOSBridge.cpp",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/MOOS/build/MOOS_svn/Essentials/pMOOSBridge/MOOSBridge.cpp",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/__init__.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/CMOOSCommObject.so",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/CMOOSCommPkt.so",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/CMOOSMsg.so",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/XPCTcpSocket.so",
		"/home/gavlab/Downloads/AdbeRdr9.5.1-1_i486linux_enu.bin",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/survey.py",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/LL2UTM.py",
		"/opt/ros/fuerte/lib/python2.7/dist-packages/visualization_msgs/msg/_MarkerArray.py",
		"/home/gavlab/Desktop/tf_stuff_from_william/transforms.xml",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/survey_convert.py",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/survey/stripe_inner_lat.txt",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/bridge.pyc",
		"/home/gavlab/Documents/FHWA2/ITM_1_1_2010_____02_38_48.alog",
		"/home/gavlab/Desktop/tf_stuff_from_william/odom2tf.py",
		"/home/gavlab/Desktop/tf_stuff_from_william/tf.launch",
		"/home/gavlab/.cache/.fr-Fzme8I/Collada_Blender_0_3_159/bpymodules/colladaImEx/collada.py",
		"/home/gavlab/.cache/.fr-CaQk4N/Collada_Blender_0_3_159/colladaExport14.py",
		"/home/gavlab/Desktop/Untitled Document",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/misc_scripts/scripts/odom2tf.py",
		"/home/gavlab/tf.launch",
		"/home/gavlab/Documents/FHWA2/novatel_to_odom.py",
		"/home/gavlab/Documents/FHWA2/error_ellipses.py",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/fhwa2_MOOS_to_ROS/scripts/novatel_to_odom.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/build/pyMOOS_svn/src/pyMOOSMsg.cpp",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS2ROS/scripts/moos2ros.py",
		"/home/gavlab/Desktop/ITM_1_1_2010_____02_38_48.alog",
		"/home/gavlab/Documents/FHWA2/LatLongUTMconversion.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/CMakeLists.txt",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/Makefile",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS2ROS/src/moos2ros.cc",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/Makefile",
		"/home/gavlab/rgc0003rosws/fhwa2_viz/misc_scripts/launch/tf.launch",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/build/pyMOOS_svn/CMakeLists.txt",
		"/home/gavlab/rgc0003rosws/.rosinstall",
		"/home/gavlab/Documents/FHWA2/ply Attempt/archived/ring1_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/obj Attempt/ring1_xyzPlane.obj",
		"/home/gavlab/Documents/FHWA2/ply Attempt/PointPlanes/all_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/PointPlanes/ring5_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/PointPlanes/ring4_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/PointPlanes/ring3_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/PointPlanes/ring2_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/PointPlanes/ring1_xyzPlane.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/test_tri.ply",
		"/home/gavlab/Documents/FHWA2/ply Attempt/test_cube.ply",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/msg_gen/cpp/include/MOOS_msgs/MOOSDouble.h",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/src/MOOS_msgs/msg/_MOOSDouble.py",
		"/home/gavlab/Documents/FHWA2/obj_io_modif232b.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/msg_gen/lisp/MOOSDouble.lisp",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/src/MOOS_msgs/__init__.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/src/MOOS_msgs/msg/__init__.py",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS_msgs/msg/MOOSDouble.msg",
		"/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS-ROS-Bridge/MOOS2ROS/include/MOOS2ROS/moos2ros.h",
		"/home/gavlab/Documents/FHWA2/ring5_xyzPlane.obj",
		"/home/gavlab/Documents/FHWA2/ring4_xyzPlane.obj",
		"/home/gavlab/Documents/FHWA2/ring3_xyzPlane.obj",
		"/home/gavlab/Documents/FHWA2/ring2_xyzPlane.obj",
		"/home/gavlab/Documents/FHWA2/ring1_xyzPlane.obj",
		"/home/gavlab/Desktop/track_survey_sorted_lla.mat"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"\"",
			"publish",
			"publisher",
			"SPHERE",
			"print",
			"time",
			"odom_msg",
			"publisher",
			"NE_holder['sens']",
			"odom_msgs",
			"NE_holder",
			"new_LatLong",
			"handle_odom_var",
			"pprint",
			"odom_publisher",
			"ozymandium",
			"radians",
			"INCLUDE_DIRS",
			"_INCLUDE_DIRS",
			"LatLong_holder",
			"odom_msgs",
			"survey",
			"setmargin",
			"course",
			"@",
			"S",
			"uMS",
			"protocol",
			"ALOG2RVIZ",
			"pub_at_position",
			"survey",
			"pub_at_position",
			"create_NCAT_map",
			"survey",
			"LL2UTM.convert",
			"convert",
			"cameraFollow_tf",
			"print",
			"print\n\n\nprint",
			"print",
			"zLongStdDev",
			"StdDev",
			"gNovatel",
			"print",
			"course",
			"base_footprint",
			"onConnect",
			"Odometry",
			"rospy",
			"odom2tf",
			"NE_holder['time']",
			"zLongStdDev",
			"gNovatel",
			"zLat",
			"zlat",
			"Novatel2Odom",
			"zc",
			"odometry_variables",
			"zHorizSpeed",
			"False",
			"print_statement",
			"novatel2odom",
			"\"MOOS\"",
			"MOOS",
			"MOOS_MSGS_MESSAGE_MOOSDOUBLE_H",
			"ros_msg",
			"IsDouble"
		],
		"highlight": false,
		"in_selection": true,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Marker.SPHERE",
			"sens",
			"UTMtoPub",
			"gavlab",
			"ll2utm",
			"time",
			"desired_variables"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "scripts/guiBridge.py",
					"settings":
					{
						"buffer_size": 6051,
						"regions":
						{
						},
						"selection":
						[
							[
								4237,
								4237
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 646.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "scripts/mailroom.py",
					"settings":
					{
						"buffer_size": 14844,
						"regions":
						{
						},
						"selection":
						[
							[
								11694,
								11694
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 3748.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "scripts/randmcnally.py",
					"settings":
					{
						"buffer_size": 10455,
						"regions":
						{
						},
						"selection":
						[
							[
								9787,
								9787
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 3522.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "scripts/bridge_tf.py",
					"settings":
					{
						"buffer_size": 650,
						"regions":
						{
						},
						"selection":
						[
							[
								258,
								261
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "to_do.txt",
					"settings":
					{
						"buffer_size": 494,
						"regions":
						{
						},
						"selection":
						[
							[
								485,
								485
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/gavlab/rgc0003rosws/fhwa2_viz/README.md",
					"settings":
					{
						"buffer_size": 1314,
						"regions":
						{
						},
						"selection":
						[
							[
								117,
								117
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "scripts/make_mult_inputs.py",
					"settings":
					{
						"buffer_size": 2342,
						"regions":
						{
						},
						"selection":
						[
							[
								505,
								505
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 45.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 7,
					"file": "/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/build/pyMOOS_svn/src/pyMOOSMsg.cpp",
					"settings":
					{
						"buffer_size": 2577,
						"regions":
						{
						},
						"selection":
						[
							[
								2110,
								2110
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 408.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/home/gavlab/rgc0003rosws/MOOS-ros-pkg/MOOS/pyMOOS/src/pymoos/MOOSCommClient.py",
					"settings":
					{
						"buffer_size": 14223,
						"regions":
						{
						},
						"selection":
						[
							[
								8510,
								8510
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1183.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/home/gavlab/alog_Files/Long_novatel_plus3.alog",
					"settings":
					{
						"buffer_size": 771023,
						"regions":
						{
						},
						"selection":
						[
							[
								1244,
								1244
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.598166765228,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 164.0,
	"status_bar_visible": true
}
