<launch>
<!-- Master Args -->
    <!-- G35 mesh that gets displayed in different sensor colors -->
    <arg name="veh_mesh_resource" default="$(find fhwa2_description)/mesh/infiniti_03_novatel_centered.dae"/>

    <!-- Colors and tags-->
    <rosparam>
        UTMdatum:
            E: 659300
            N: 3607850

        <!-- tells parser what other rosparams to look for -
                 PUT REFERENCE FIRST -->
        tags: ["rtk","gps","flt","psu","sri"]

        rtk_color: 0,1,0
        rtk_text: RTK

        gps_color: 1,0,0
        gps_text: GPS

        flt_color: 0,0,1
        flt_text: Filtered

        psu_color: 1,0,1
        psu_text: Penn St

        sri_color: 1,1,0
        sri_text: SRI

        err_ell_opacity: 0.4

    </rosparam>


<!-- MOOS Stuff -->
    <node pkg="MOOS" type="MOOSDB" name="MOOSDB" respawn="true" output="screen"/>    
    <node pkg="MOOS" type="uPlayBackIndex" name="uPB" required="true" output="screen"/>

    <!-- MOOS App -->
    <node pkg="fhwa2_MOOS_to_ROS" type="liveBridge_node" name="MOOSBridge" output="screen" respawn="true"
        args="$(find fhwa2_launch)/mission/playback.moos gMOOS2ROS"/>


<!-- Sends MOOSrosmsg to respective rvizBridge -->
    <node pkg="fhwa2_gui" type="splitter.py" name="splitter" output="screen" required="true">
        <param name="DEBUG" value=""/>
        <param name="moosapp_name" value="gMOOS2ROS"/>
        <!-- Each position solution takes 6 indexes in the string -->
        <!-- Where stuff is in that MOOSrosmsg which isn't a position solution 
                begin with index 0 -->
        <param name="orient_index" value="30"/>
        <param name="numsat_index" value="31"/>
    </node>


<!-- Survey -->
    <!-- old monolithic node -->
    <!-- <node pkg="fhwa2_survey" type="mapBridge.py" name="survey" output="screen"> -->
        <!-- File inputs -->
        <!-- <param name="prefix" value="$(find fhwa2_survey)"/> -->
        <!-- <param name="track_mesh_resource" value="$(find fhwa2_survey)/mesh/NCAT_pavement_plane.stl"/> -->
        <!-- <param name="marking_mesh_resource" value=""/> -->
        <!-- <param name="survey_stripe_locs"  -->
            <!-- value="survey/stripes/inner.txt, survey/stripes/middle.txt, survey/stripes/outer.txt"/> -->
        <!-- <param name="survey_center_locs"  -->
            <!-- value="survey/centers/inner.txt, survey/centers/outer.txt"/> -->
    <!-- </node> -->

    <include file="$(find fhwa2_survey)/launch/NCAT.launch"/>

<!-- Solutions -->
<!-- RTK -->
    <node pkg="fhwa2_gui" type="rvizBridge.py" name="rvizBridge_rtk" output="screen" required="true">
        <param name="DEBUG" value=""/> <!-- Leave empty string for false -->
        <param name="tag" value="rtk"/> <!-- used to set publishers -->
        <param name="coord_sys" value="ECEF"/>      
        <!-- display parameters -->
        <param name="veh_mesh_resource" value="$(arg veh_mesh_resource)"/>
        <param name="legend_text_height" value="4.0"/>
    </node>

    <!-- Standalone GPS -->
    <node pkg="fhwa2_gui" type="rvizBridge.py" name="rvizBridge_gps" output="screen" required="true">
        <param name="DEBUG" value=""/> <!-- Leave empty string for false -->
        <param name="tag" value="gps"/> 
        <param name="coord_sys" value="ECEF"/>       
        <!-- display parameters -->
        <param name="veh_mesh_resource" value="$(arg veh_mesh_resource)"/>
        <param name="legend_text_height" value="3.5"/>
    </node>

    <!-- Filtered-->
    <node pkg="fhwa2_gui" type="rvizBridge.py" name="rvizBridge_flt" output="screen" required="true">
        <param name="DEBUG" value=""/> <!-- Leave empty string for false -->
        <param name="tag" value="flt"/> <!-- used to set publishers -->
        <param name="coord_sys" value="ECEF"/>       
        <!-- display parameters -->
        <param name="veh_mesh_resource" value="$(arg veh_mesh_resource)"/>
        <param name="legend_text_height" value="3.0"/>
    </node>

    <!-- Penn St Road Fingerprinting-->
    <node pkg="fhwa2_gui" type="rvizBridge.py" name="rvizBridge_psu" output="screen" required="true">
        <param name="DEBUG" value=""/> <!-- Leave empty string for false -->
        <param name="tag" value="psu"/> <!-- used to set publishers -->
        <param name="coord_sys" value="ECEF"/>
        <!-- display parameters -->
        <param name="veh_mesh_resource" value="$(arg veh_mesh_resource)"/>
        <param name="legend_text_height" value="2.5"/>
    </node>

    <!-- Sarnoff Visual Odometry-->
    <node pkg="fhwa2_gui" type="rvizBridge.py" name="rvizBridge_sri" output="screen" required="true">
        <param name="DEBUG" value=""/> <!-- Leave empty string for false -->
        <param name="tag" value="sri"/> <!-- used to set publishers -->
        <param name="coord_sys" value="ECEF"/>
        <!-- display parameters -->
        <param name="veh_mesh_resource" value="$(arg veh_mesh_resource)"/>
        <param name="legend_text_height" value="2.0"/>
    </node>


<!-- Error Nodes -->
    <!-- GPS / RTK -->
    <node pkg="fhwa2_gui" type="poseError.py" name="gps_rtk_error" output="screen" required="true">
        <param name="DEBUG" value=""/> <!-- Leave empty string for false -->
        <param name="sync_tol" value=".01"/>
        <param name="ref_tag" value="rtk"/>
        <param name="tgt_tag" value="gps"/>
   </node>

    <!-- FHWA2 / RTK -->
    <node pkg="fhwa2_gui" type="poseError.py" name="flt_rtk_error" output="screen" required="true">
        <param name="DEBUG" value=""/> <!-- Leave empty string for false -->
        <param name="sync_tol" value=".01"/>
        <param name="ref_tag" value="rtk"/>
        <param name="tgt_tag" value="flt"/>
    </node>

    <!-- Penn St / RTK -->
    <node pkg="fhwa2_gui" type="poseError.py" name="psu_rtk_error" output="screen" required="true">
        <param name="DEBUG" value=""/> <!-- Leave empty string for false -->
        <param name="sync_tol" value=".01"/>
        <param name="ref_tag" value="rtk"/>
        <param name="tgt_tag" value="psu"/>
    </node>

    <!-- Sarnoff / RTK -->
    <node pkg="fhwa2_gui" type="poseError.py" name="sri_rtk_error" output="screen" required="true">
        <param name="DEBUG" value=""/> <!-- Leave empty string for false -->
        <param name="sync_tol" value=".01"/>
        <param name="ref_tag" value="rtk"/>
        <param name="tgt_tag" value="sri"/>
    </node>


<!-- rQt -->
    <node pkg="rqt_gui" type="rqt_gui" name="rqt" output="screen" required="true"/>

</launch>